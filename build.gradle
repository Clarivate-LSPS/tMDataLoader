def configFileName = System.getProperty('user.home') + File.separator + '.tm_etl' + File.separator + 'Config.groovy'
def configFile = new File(configFileName)
if (configFile.exists()) {
    project.ext.dbConfig = new ConfigSlurper().parse(configFile.toURI().toURL()).db
    if (!hasProperty('database')) {
        if (dbConfig.jdbcConnectionString.contains(":postgresql:")) {
            project.ext.database = "postgresql"
        } else if (dbConfig.jdbcConnectionString.contains(":oracle:")) {
            project.ext.database = "oracle"
        }
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:3.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'

if (hasProperty('dbConfig')) {
    apply plugin: 'flyway'

    flyway {
        url = dbConfig.jdbcConnectionString
        user = dbConfig.username
        password = dbConfig.password
    }
}

group = 'com.thomsonreuters.lsps.transmart.etl'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.5
targetCompatibility = 1.5

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.0.8'
    runtime group: 'commons-cli', name: 'commons-cli', version: '1.2'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

if (hasProperty('database')) {
    apply from: "${database}-build.gradle"
    logger.info("${database}-build.gradle loaded")
} else {
    logger.warn("No database specified. JDBC driver classes should be in class path (to built-in driver use command line option -Pdatabase=<oracle|postgresql>)")
}

jar {
    from { (configurations.compile + configurations.runtime).collect { it.isDirectory() ? it : zipTree(it) } }
    manifest { attributes 'Main-Class': 'com.thomsonreuters.lsps.transmart.etl.CommandLineTool' }
}
