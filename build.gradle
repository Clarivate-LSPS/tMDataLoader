buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:3.0'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

if (hasProperty('dbConfig')) {
    apply plugin: 'flyway'

    flyway {
        url = dbConfig.jdbcConnectionString
        user = dbConfig.username
        password = dbConfig.password
    }
}

group = 'com.thomsonreuters.lsps.transmart.etl'
description = """"""

sourceSets.main.java {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

repositories {
    mavenCentral()
    maven { url "https://code.lds.org/nexus/content/groups/main-repo" }
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.3.6'
    compile 'com.oracle:ojdbc5:11.2.0.2.0'
    compile files('lib/xdb6.jar')
    compile 'org.postgresql:postgresql:9.3-1102-jdbc4'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-csv:1.1'

    runtime group: 'commons-cli', name: 'commons-cli', version: '1.2'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.3'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.thomsonreuters.lsps.transmart.etl.CommandLineTool', 'Implementation-Version': version
    }
}

processResources {
    expand(project.properties)
    outputs.upToDateWhen { false }
}

springBoot {
    mainClass = "com.thomsonreuters.lsps.transmart.etl.CommandLineTool"
}

task runSqlScripts(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'com.thomsonreuters.lsps.transmart.etl.RunSqlScriptsCommand'

    // arguments to pass to the application
    if (project.hasProperty('config')) {
        args '--config', project.'config'
    }
    if (project.hasProperty('dba-user') && project.hasProperty('dba-user')) {
        args '--dba-user', project.'dba-user', '--dba-password', project.'dba-password'
    }
}

task updateSqlProcedures(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'com.thomsonreuters.lsps.transmart.etl.RunSqlScriptsCommand'

    // arguments to pass to the application
    if (project.hasProperty('config')) {
        args '--config', project.'config'
    }
    args '-P'
}

[sourceSets.main, sourceSets.test].each {
    it.output.resourcesDir = it.output.classesDir
}

apply from: 'tasks.gradle'
